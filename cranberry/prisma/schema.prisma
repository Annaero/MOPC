generator client {
  provider = "prisma-client-js"
}

generator zod {
  provider                         = "zod-prisma-types"
  output                           = "../src/lib/models"
  createOptionalDefaultValuesTypes = true
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum Role {
  ADMIN
  USER
}

enum EventType {
  OFFLINE
  ONLINE
}

model Profile {
  id       String  @id @db.Uuid
  role     Role    @default(USER)
  userId   String  @unique @map("user_id")
  username String  @unique
  Event    Event[]

  @@map("profiles")
}

model Event {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  description String
  startDate   DateTime  @map("start_date")
  endDate     DateTime? @map("end_date")
  type        EventType
  owner       Profile   @relation(fields: [ownerId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  ownerId     String    @map("owner_id") @db.Uuid
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")

  @@map("events")
}
