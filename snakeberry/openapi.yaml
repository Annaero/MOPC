openapi: 3.0.2
info:
  description: This API provides interface for CRUD operations with various events
  title: MOPC Events API
  version: "0.1"
servers:
- url: https://mopc.xyz
- url: https://stage.mopc.xyz
- url: localhost:5001
paths:
  /events:
    get:
      description: Return events list for given dates span
      parameters:
      - description: the date FROM which the events will be returned (inclusive)
        explode: true
        in: query
        name: startDate
        required: true
        schema:
          format: date
          type: string
        style: form
      - description: the date BY which the events will be returned (inclusive)
        explode: true
        in: query
        name: endDate
        required: true
        schema:
          format: date
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Event'
                type: array
          description: OK
        "400":
          content:
            application/json:
              example:
                code: 400
                message: The start date must be less than or equal to the end date
              schema:
                $ref: '#/components/schemas/Error'
          description: Wrong timespan passed
        "500":
          content:
            application/json:
              example:
                code: 500
                message: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
    post:
      description: Creates a new event. Duplicate names are not allowed
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewEvent'
        description: Event to add
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: Event created
        "400":
          content:
            application/json:
              example:
                code: 400
                message: The start date must be less than or equal to the end date
              schema:
                $ref: '#/components/schemas/Error'
          description: Incorrect value
        "409":
          content:
            application/json:
              example:
                code: 409
                message: Event with name EventName already exists
              schema:
                $ref: '#/components/schemas/Error'
          description: Name already exists
        "500":
          content:
            application/json:
              example:
                code: 500
                message: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
  /events/{id}:
    delete:
      description: Deletes a single event based on the ID supplied
      parameters:
      - description: ID of event to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: Event deleted
        "404":
          content:
            application/json:
              example:
                code: 404
                message: Not found
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              example:
                code: 500
                message: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
    get:
      description: Returns an event by its ID
      parameters:
      - description: ID of event to fetch
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: Fetched event
        "404":
          content:
            application/json:
              example:
                code: 404
                message: Not found
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              example:
                code: 500
                message: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
components:
  responses:
    NotFound:
      content:
        application/json:
          example:
            code: 404
            message: Not found
          schema:
            $ref: '#/components/schemas/Error'
      description: The specified resource was not found
    UnexpectedError:
      content:
        application/json:
          example:
            code: 500
            message: Internal server error
          schema:
            $ref: '#/components/schemas/Error'
      description: Unexpected error
  schemas:
    Event:
      example:
        endDate: 2000-01-23
        name: name
        description: description
        id: 0
        type: type
        startDate: 2000-01-23
      properties:
        id:
          format: int64
          title: id
          type: integer
        name:
          title: name
          type: string
        type:
          title: type
          type: string
        description:
          title: description
          type: string
        startDate:
          format: date
          title: startDate
          type: string
        endDate:
          format: date
          title: endDate
          type: string
      required:
      - description
      - endDate
      - id
      - name
      - startDate
      - type
      title: Event
      type: object
    NewEvent:
      example:
        endDate: 2000-01-23
        name: name
        description: description
        type: type
        startDate: 2000-01-23
      properties:
        name:
          title: name
          type: string
        type:
          title: type
          type: string
        description:
          title: description
          type: string
        startDate:
          format: date
          title: startDate
          type: string
        endDate:
          format: date
          title: endDate
          type: string
      required:
      - description
      - endDate
      - name
      - startDate
      - type
      title: NewEvent
      type: object
    Error:
      properties:
        code:
          format: int32
          title: code
          type: integer
        message:
          title: message
          type: string
      required:
      - code
      - message
      title: Error
      type: object
